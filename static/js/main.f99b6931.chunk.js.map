{"version":3,"sources":["components/NoteItem.js","context/NotesContext.js","components/NotesList.js","components/Sidebar.js","components/Note.js","components/Categories.js","components/EditNote.js","components/Main.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["getPreviewOfText","text","size","output","substring","length","NoteItem","note","selectNote","selectedNote","onClick","className","id","undefined","title","category","body","moment","updated_at","fromNow","NotesContext","createContext","NotesProvider","children","useState","notes","setNotes","setSelectedNote","editMode","setEditMode","useEffect","fetchNotesFromLocalStorage","updateNotesInLocalStorage","window","localStorage","getItem","JSON","parse","json","stringify","setItem","Provider","value","addEmptyNote","newNote","uuid","Date","modifiedNotes","unshift","saveNote","filter","iNote","deleteNote","NotesList","useContext","map","Sidebar","Note","editNote","viewBox","xmlns","data-name","d","onDoubleClick","height","width","COLORS","Categories","selectedCategory","onSelect","color","selectCategory","EditNote","setTitle","setBody","setSelectedCategory","onSubmit","e","preventDefault","submitForm","type","placeholder","onChange","target","autoFocus","enableBackground","x","y","points","rows","Main","App","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","classes","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f99b6931.chunk.js","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction NoteItem({ note, selectNote, selectedNote }) {\r\n    return (\r\n        <li onClick={() => selectNote(note)} className={note.id === selectedNote.id ? \"selected\" : undefined}>\r\n            <div className=\"row\">\r\n                <div className=\"title\">{ getPreviewOfText(note.title, 33) }</div>\r\n                { (note.category !== \"\" && note.category !== undefined) ? (\r\n                    <div className={`category category-${note.category}`}></div>\r\n                ): null}\r\n                \r\n            </div>\r\n            <div className=\"row\">\r\n                <span className=\"body-preview\">{ getPreviewOfText(note.body) }</span>\r\n                <span className=\"date\">{ moment(note.updated_at).fromNow() }</span>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction getPreviewOfText(text, size = 25) {\r\n    const output = text.substring(0, size)\r\n    return output.length === text.length ? text : output + \"...\"\r\n}\r\n\r\nexport default NoteItem\r\n","import React, { useState, createContext, useEffect } from 'react'\r\nimport { uuid } from 'uuidv4';\r\n\r\nexport const NotesContext = createContext();\r\n\r\nexport const NotesProvider = ({ children }) => {\r\n    const [notes, setNotes] = useState([])\r\n\r\n    const [selectedNote, setSelectedNote] = useState({})\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const notes = fetchNotesFromLocalStorage()\r\n        setNotes(notes)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        updateNotesInLocalStorage()\r\n    }, [notes])\r\n\r\n    const fetchNotesFromLocalStorage = () => {\r\n        let notes = window.localStorage.getItem('notes');\r\n        notes = JSON.parse(notes)\r\n        return notes === null ? [] : notes\r\n    }\r\n\r\n    const updateNotesInLocalStorage = () => {\r\n        let json = JSON.stringify(notes)\r\n        window.localStorage.setItem('notes', json)\r\n    }\r\n\r\n    const selectNote = (note) => {\r\n        setSelectedNote(note)\r\n        setEditMode(false)\r\n    }\r\n\r\n    const addEmptyNote = () => {\r\n        const newNote = {\r\n            id: uuid(),\r\n            title: \"untitled\",\r\n            body: \"\",\r\n            updated_at: new Date()\r\n        }\r\n\r\n        const modifiedNotes = notes\r\n        modifiedNotes.unshift(newNote)\r\n        setNotes(modifiedNotes)\r\n\r\n        setSelectedNote(newNote)\r\n        setEditMode(true)\r\n    }\r\n\r\n    const saveNote = ({ id, title, body, category }) => {\r\n        const modifiedNotes = notes.filter(iNote => iNote.id !== id)\r\n\r\n        const note = notes.filter(iNote => iNote.id === id)[0]\r\n        note.title = title\r\n        note.body = body\r\n        note.category = category\r\n        note.updated_at =  new Date()\r\n\r\n        modifiedNotes.unshift(note)\r\n\r\n        setNotes(modifiedNotes)\r\n        setEditMode(false)\r\n        updateNotesInLocalStorage()\r\n    }\r\n\r\n    const deleteNote = (id) => {\r\n        const modifiedNotes = notes.filter(iNote => iNote.id !== id)\r\n        setNotes(modifiedNotes)\r\n        setEditMode(false)\r\n        setSelectedNote({})\r\n    }\r\n\r\n    return (\r\n        <NotesContext.Provider value={{notes, selectedNote, setSelectedNote, editMode, setEditMode, selectNote, addEmptyNote, saveNote, deleteNote}}>\r\n            { children }\r\n        </NotesContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\nimport NoteItem from './NoteItem'\r\nimport { NotesContext } from '../context/NotesContext'\r\n\r\nfunction NotesList() {\r\n    const { notes, selectedNote, selectNote } = useContext(NotesContext)\r\n\r\n\r\n    return (\r\n        <ul>\r\n            { notes.map(note => (\r\n                <NoteItem key={note.id} note={note} selectNote={selectNote} selectedNote={selectedNote} />\r\n            )) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default NotesList\r\n","import React, { useContext } from 'react'\r\nimport NotesList from './NotesList'\r\nimport { NotesContext } from '../context/NotesContext'\r\n\r\nfunction Sidebar() {\r\n\r\n    const { addEmptyNote } = useContext(NotesContext)\r\n\r\n    \r\n    return (\r\n        <aside className=\"main-side-bar\">\r\n            <div className=\"header\">\r\n                <h1>My Notes</h1>\r\n            </div>\r\n            <NotesList />\r\n            <div className=\"center\">\r\n                <button className=\"btn-primary\" onClick={addEmptyNote}>+ Create new note</button>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useContext } from 'react'\r\nimport { NotesContext } from '../context/NotesContext'\r\n\r\n\r\nfunction Note() {\r\n    const { selectedNote, setSelectedNote, setEditMode } = useContext(NotesContext)\r\n\r\n    const editNote = () => setEditMode(true)\r\n\r\n    return selectedNote.id ? (\r\n        <div className=\"show-note\">\r\n            <div className=\"row\">\r\n                <button className=\"btn-option-left btn-back\" onClick={() => setSelectedNote({})}>\r\n                    <svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"1\" id=\"_1\"><path d=\"M353,450a15,15,0,0,1-10.61-4.39L157.5,260.71a15,15,0,0,1,0-21.21L342.39,54.6a15,15,0,1,1,21.22,21.21L189.32,250.1,363.61,424.39A15,15,0,0,1,353,450Z\"/></g></svg>\r\n                </button>\r\n                <h2 className=\"title\" onDoubleClick={editNote}>{ selectedNote.title }</h2>\r\n                <button className=\"btn-option\" onClick={editNote}>\r\n                    <svg height=\"484pt\" viewBox=\"-15 -15 484.00019 484\" width=\"484pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m401.648438 18.234375c-24.394532-24.351563-63.898438-24.351563-88.292969 0l-22.101563 22.222656-235.269531 235.144531-.5.503907c-.121094.121093-.121094.25-.25.25-.25.375-.625.746093-.871094 1.121093 0 .125-.128906.125-.128906.25-.25.375-.371094.625-.625 1-.121094.125-.121094.246094-.246094.375-.125.375-.25.625-.378906 1 0 .121094-.121094.121094-.121094.25l-52.199219 156.96875c-1.53125 4.46875-.367187 9.417969 2.996094 12.734376 2.363282 2.332031 5.550782 3.636718 8.867188 3.625 1.355468-.023438 2.699218-.234376 3.996094-.625l156.847656-52.324219c.121094 0 .121094 0 .25-.121094.394531-.117187.773437-.285156 1.121094-.503906.097656-.011719.183593-.054688.253906-.121094.371094-.25.871094-.503906 1.246094-.753906.371093-.246094.75-.621094 1.125-.871094.125-.128906.246093-.128906.246093-.25.128907-.125.378907-.246094.503907-.5l257.371093-257.371094c24.351563-24.394531 24.351563-63.898437 0-88.289062zm-232.273438 353.148437-86.914062-86.910156 217.535156-217.535156 86.914062 86.910156zm-99.15625-63.808593 75.929688 75.925781-114.015626 37.960938zm347.664062-184.820313-13.238281 13.363282-86.917969-86.917969 13.367188-13.359375c14.621094-14.609375 38.320312-14.609375 52.945312 0l33.964844 33.964844c14.511719 14.6875 14.457032 38.332031-.121094 52.949218zm0 0\"/></svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"body\" onDoubleClick={ editNote }>{ selectedNote.body }</div>\r\n        </div>\r\n    ) : null\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\n\r\nconst COLORS = [\r\n    \"yellow\",\r\n    \"red\",\r\n    \"green\",\r\n    \"blue\",\r\n    \"purple\"\r\n]\r\n\r\nfunction Categories({ selectedCategory, onSelect }) {\r\n\r\n    const selectCategory = (color) => {\r\n        if(color === selectedCategory) {\r\n            onSelect(\"\")\r\n        } else {\r\n            onSelect(color)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            { COLORS.map(color => (\r\n                <div \r\n                    key={color}\r\n                    onClick={() => selectCategory(color) } \r\n                    className={\r\n                        `category category-${color} ${ selectedCategory === color ? \"category-selected\" : \"\"}`\r\n                    }\r\n                />\r\n            )) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","import { useState, useContext } from 'react'\r\nimport { NotesContext } from '../context/NotesContext'\r\nimport Categories from './Categories'\r\n\r\nfunction EditNote() {\r\n    const { selectedNote, saveNote, deleteNote } = useContext(NotesContext)\r\n\r\n\r\n    const [title, setTitle] = useState(selectedNote.title)\r\n    const [body, setBody] = useState(selectedNote.body)\r\n    const [selectedCategory, setSelectedCategory] = useState(selectedNote.category)\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault()\r\n        saveNote({ id: selectedNote.id, title, body, category: selectedCategory })\r\n    }\r\n\r\n    return (\r\n        <form className=\"edit-note\" onSubmit={ e => submitForm(e) }>\r\n            <div className=\"row\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"title\" \r\n                    placeholder=\"Title\" \r\n                    value={title} \r\n                    onChange={e => setTitle(e.target.value)} \r\n                    autoFocus \r\n                />\r\n                <button className=\"btn-option\" onClick={ () => deleteNote(selectedNote.id) }>\r\n                    <svg id=\"Layer_1\" enableBackground=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m424 64h-88v-16c0-26.467-21.533-48-48-48h-64c-26.467 0-48 21.533-48 48v16h-88c-22.056 0-40 17.944-40 40v56c0 8.836 7.164 16 16 16h8.744l13.823 290.283c1.221 25.636 22.281 45.717 47.945 45.717h242.976c25.665 0 46.725-20.081 47.945-45.717l13.823-290.283h8.744c8.836 0 16-7.164 16-16v-56c0-22.056-17.944-40-40-40zm-216-16c0-8.822 7.178-16 16-16h64c8.822 0 16 7.178 16 16v16h-96zm-128 56c0-4.411 3.589-8 8-8h336c4.411 0 8 3.589 8 8v40c-4.931 0-331.567 0-352 0zm313.469 360.761c-.407 8.545-7.427 15.239-15.981 15.239h-242.976c-8.555 0-15.575-6.694-15.981-15.239l-13.751-288.761h302.44z\"/><path d=\"m256 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z\"/><path d=\"m336 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z\"/><path d=\"m176 448c8.836 0 16-7.164 16-16v-208c0-8.836-7.164-16-16-16s-16 7.164-16 16v208c0 8.836 7.163 16 16 16z\"/></g></svg>\r\n                </button>\r\n                <button type=\"submit\" className=\"btn-option\">\r\n                    <svg x=\"0px\" y=\"0px\" width=\"448.8px\" height=\"448.8px\" viewBox=\"0 0 448.8 448.8\">\r\n                        <g id=\"check\">\r\n                            <polygon points=\"142.8,323.85 35.7,216.75 0,252.45 142.8,395.25 448.8,89.25 413.1,53.55\"/>\r\n                        </g>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <Categories selectedCategory={selectedCategory} onSelect={setSelectedCategory} />\r\n            <textarea \r\n                className=\"body\" \r\n                placeholder=\"Body\" \r\n                rows=\"10\" \r\n                value={body} \r\n                onChange={e => setBody(e.target.value)} \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditNote","import { useContext } from 'react'\r\nimport { NotesContext } from '../context/NotesContext'\r\nimport Note from './Note';\r\nimport EditNote from './EditNote'\r\n\r\nfunction Main() {\r\n    const { editMode } = useContext(NotesContext)\r\n\r\n    return (\r\n        <main>\r\n            { editMode ?\r\n                <EditNote /> :\r\n                <Note />\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { useContext, useLayoutEffect, useState } from 'react'\nimport './App.scss';\nimport Sidebar from './components/Sidebar';\nimport Main from './components/Main';\nimport { NotesContext } from './context/NotesContext'\n\nfunction App() {\n    const { width } = useWindowSize()\n    const { selectedNote } = useContext(NotesContext)\n    let classes = \"container\"\n\n    if(width < 1000) {\n        classes += \" mobile-mode\"\n\n        if(selectedNote.id)\n            classes += \" note-full-screen\"\n    }\n\n    return (\n        <div className={classes}>\n            <Sidebar />\n            <Main />\n        </div>\n    );\n}\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize({width: window.innerWidth, height: window.innerHeight});\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorkerRegistration';\nimport { NotesProvider } from './context/NotesContext'\n\nReactDOM.render(\n    <React.StrictMode>\n        <NotesProvider>\n            <App />\n        </NotesProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.register();"],"sourceRoot":""}